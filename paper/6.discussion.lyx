#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
Our work is oriented differently from a large number of code completion
 studies mentioned in Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:related work"

\end_inset

 in that it does not incorporate syntactic nor structural knowledge, but
 rather treats the code as a sequence of raw tokens.
 Such structures can only be obtained from complete, compile-ready codes
 which satisfy all the given rules and conditions.
 However, in many cases code autocompletion occurs in incomplete codes from
 which it is difficult to derive syntax tree structures.
 Our approach can therefore bridge the gap between preserving and reconstructing
 a code with a certain structure as well as being simple enough to be applicable
 to codes at a token level.
\end_layout

\begin_layout Standard
One limitation observed in our model is its inability to interpret character-lev
el patterns, such as camelcase concatenations of tokens.
 Using camelcase conventions to come with new variable or functions names
 is very common in programming environments, and there have also been approaches
 to identify patterns from such notations
\begin_inset space \thinspace{}
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "enslen09mining,hayase11code,khatiwada16stac"

\end_inset

.
 While this problem can be tackled using a multi-level approach that incorporate
s both character- and word-level LSTMs as in 
\begin_inset CommandInset citation
LatexCommand cite
key "verwimp17lstm"

\end_inset

, we leave such settings for future work.
\end_layout

\end_body
\end_document
